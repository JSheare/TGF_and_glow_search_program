import glob
import os
import shutil
import sys
import search_module as sm

# Moves all scatter plots and histograms generated by search.py to centralized locations
try:
    # Establish dates from inputs 1 & 2
    first_date = str(sys.argv[1])

    second_date = str(sys.argv[2])

    # Input 3 is where the user specifies which set of detector data is desired
    unit = str(sys.argv[3])

    s_path = f"{os.getcwd() if sm.results_loc() == '' else sm.results_loc()}/Collected Images/Scatter Plots/"
    if not os.path.exists(s_path):
        os.makedirs(s_path)

    h_path = f"{os.getcwd() if sm.results_loc() == '' else sm.results_loc()}/Collected Images/Histograms/"
    if not os.path.exists(h_path):
        os.makedirs(h_path)

    detector_path = f"{os.getcwd() if sm.results_loc() == '' else sm.results_loc()}/Results/{unit}/"

    # Makes a list of all the dates on the requested range
    requested_dates = [first_date]
    if first_date != second_date:
        date_int = int(first_date)
        while True:
            date_int += 1
            date_str = str(date_int)
            # Month rollover
            if int(date_str[4:]) > sm.days_per_month(int(date_str[2:4]), int('20' + date_str[0:2])):
                date_int = date_int + 100 - (int(date_str[4:]) - 1)
                date_str = str(date_int)

            # Year rollover
            if int(date_str[2:4]) > 12:
                date_int = (date_int // 10000 + 1) * 10000 + 101
                date_str = str(date_int)

            # Note: these rollovers won't work properly for dates outside the 21st century :)

            if date_str == second_date:
                requested_dates.append(date_str)
                break
            else:
                requested_dates.append(date_str)

    for date in requested_dates:
        full_day_string = str(date)  # In format yymmdd
        path = f'{detector_path}/{full_day_string}'

        # Scatter plots:
        scatter_plot_list = glob.glob(f'{path}/scatterplots/*event*.png')
        for s_file in scatter_plot_list:
            s_filename = s_file.replace(path, '')[14:]
            shutil.copyfile(s_file, f'{s_path}{s_filename}')

        # Histograms
        histogram_list = glob.glob(f'{path}/*histogram.png')
        for h_file in histogram_list:
            h_filename = h_file.replace(path, '')[1:]
            shutil.copyfile(h_file, f'{h_path}{h_filename}')

except IndexError:
    print('Remember to specify the dates and detector!')
    exit()
